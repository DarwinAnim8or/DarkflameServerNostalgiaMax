#include "CDZoneTableTable.h"
//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:33.508469
//DO NOT EDIT THIS FILE MANUALLY!

CDZoneTableTable::CDZoneTableTable() {
	unsigned int size = 0;
	auto tableSize = CDClientDatabase::ExecuteQuery("SELECT COUNT(*) FROM ZoneTable");
		while (!tableSize.eof()) {
		size = tableSize.getIntField(0, 0);
		tableSize.nextRow();
	}

	tableSize.finalize();

	auto tableData = CDClientDatabase::ExecuteQuery("SELECT * FROM ZoneTable");
	while (!tableData.eof()) {
		CDZoneTable entry;
		entry.zoneID = tableData.getIntField(0, int{});
		entry.zoneName = tableData.getStringField(1, std::string{}.c_str());
		entry.scriptID = tableData.getIntField(2, int{});
		entry.ghostdistance = tableData.getFloatField(3, float{});
		entry.population_soft_cap = tableData.getIntField(4, int{});
		entry.population_hard_cap = tableData.getIntField(5, int{});
		entry.DisplayDescription = tableData.getStringField(6, std::string{}.c_str());
		entry.mapFolder = tableData.getStringField(7, std::string{}.c_str());
		entry.smashableMinDistance = tableData.getFloatField(8, float{});
		entry.smashableMaxDistance = tableData.getFloatField(9, float{});
		entry.mixerProgram = tableData.getStringField(10, std::string{}.c_str());
		entry.clientPhysicsFramerate = tableData.getStringField(11, std::string{}.c_str());
		entry.serverPhysicsFramerate = tableData.getStringField(12, std::string{}.c_str());
		entry.zoneControlTemplate = tableData.getIntField(13, int{});
		this->m_Entries.insert(std::make_pair(entry.zoneID, entry));
		tableData.nextRow();
	}

	tableData.finalize();
}

CDZoneTableTable::~CDZoneTableTable() {
}

std::string CDZoneTableTable::GetName(void) const {
	return "ZoneTable";
}

const CDZoneTable* CDZoneTableTable::Query(unsigned int zoneID) {
	const auto& iter = m_Entries.find(zoneID);

	if (iter != m_Entries.end()) {
		return &iter->second;
	}

	return nullptr;
}