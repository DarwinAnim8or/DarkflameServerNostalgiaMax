#include "CDmapItemTypesTable.h"
//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:33.164879
//DO NOT EDIT THIS FILE MANUALLY!

CDmapItemTypesTable::CDmapItemTypesTable() {
	unsigned int size = 0;
	auto tableSize = CDClientDatabase::ExecuteQuery("SELECT COUNT(*) FROM mapItemTypes");
		while (!tableSize.eof()) {
		size = tableSize.getIntField(0, 0);
		tableSize.nextRow();
	}

	tableSize.finalize();
	this->m_entries.reserve(size);

	auto tableData = CDClientDatabase::ExecuteQuery("SELECT * FROM mapItemTypes");
	while (!tableData.eof()) {
		CDmapItemTypes entry;
		entry.id = tableData.getIntField(0, int{});
		entry.description = tableData.getStringField(1, std::string{}.c_str());
		entry.equipLocation = tableData.getStringField(2, std::string{}.c_str());
		this->m_entries.push_back(entry);
		tableData.nextRow();
	}

	tableData.finalize();
}

CDmapItemTypesTable::~CDmapItemTypesTable() {
}

std::string CDmapItemTypesTable::GetName(void) const {
	return "mapItemTypes";
}

std::vector<CDmapItemTypes> CDmapItemTypesTable::Query(std::function<bool(CDmapItemTypes)> predicate) {
	std::vector<CDmapItemTypes> data = cpplinq::from(this->m_entries)
		>> cpplinq::where(predicate)
		>> cpplinq::to_vector();

	return data;
}

std::vector<CDmapItemTypes> CDmapItemTypesTable::GetEntries(void) const {
	return this->m_entries;
}
