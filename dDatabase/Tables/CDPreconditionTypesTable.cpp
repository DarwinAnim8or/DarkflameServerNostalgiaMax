#include "CDPreconditionTypesTable.h"
//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:33.289069
//DO NOT EDIT THIS FILE MANUALLY!

CDPreconditionTypesTable::CDPreconditionTypesTable() {
	unsigned int size = 0;
	auto tableSize = CDClientDatabase::ExecuteQuery("SELECT COUNT(*) FROM PreconditionTypes");
		while (!tableSize.eof()) {
		size = tableSize.getIntField(0, 0);
		tableSize.nextRow();
	}

	tableSize.finalize();
	this->m_entries.reserve(size);

	auto tableData = CDClientDatabase::ExecuteQuery("SELECT * FROM PreconditionTypes");
	while (!tableData.eof()) {
		CDPreconditionTypes entry;
		entry.id = tableData.getIntField(0, int{});
		entry.description = tableData.getStringField(1, std::string{}.c_str());
		this->m_entries.push_back(entry);
		tableData.nextRow();
	}

	tableData.finalize();
}

CDPreconditionTypesTable::~CDPreconditionTypesTable() {
}

std::string CDPreconditionTypesTable::GetName(void) const {
	return "PreconditionTypes";
}

std::vector<CDPreconditionTypes> CDPreconditionTypesTable::Query(std::function<bool(CDPreconditionTypes)> predicate) {
	std::vector<CDPreconditionTypes> data = cpplinq::from(this->m_entries)
		>> cpplinq::where(predicate)
		>> cpplinq::to_vector();

	return data;
}

std::vector<CDPreconditionTypes> CDPreconditionTypesTable::GetEntries(void) const {
	return this->m_entries;
}
