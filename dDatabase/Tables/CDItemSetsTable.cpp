#include "CDItemSetsTable.h"
//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:33.013275
//DO NOT EDIT THIS FILE MANUALLY!

CDItemSetsTable::CDItemSetsTable() {
	unsigned int size = 0;
	auto tableSize = CDClientDatabase::ExecuteQuery("SELECT COUNT(*) FROM ItemSets");
		while (!tableSize.eof()) {
		size = tableSize.getIntField(0, 0);
		tableSize.nextRow();
	}

	tableSize.finalize();
	this->m_entries.reserve(size);

	auto tableData = CDClientDatabase::ExecuteQuery("SELECT * FROM ItemSets");
	while (!tableData.eof()) {
		CDItemSets entry;
		entry.setID = tableData.getIntField(0, int{});
		entry.itemIDs = tableData.getStringField(1, std::string{}.c_str());
		entry.displayName = tableData.getStringField(2, std::string{}.c_str());
		entry.description = tableData.getStringField(3, std::string{}.c_str());
		entry.skillWith2 = tableData.getIntField(4, int{});
		entry.castType2 = tableData.getIntField(5, int{});
		entry.skillWith3 = tableData.getIntField(6, int{});
		entry.castType3 = tableData.getIntField(7, int{});
		entry.skillWith4 = tableData.getIntField(8, int{});
		entry.castType4 = tableData.getIntField(9, int{});
		entry.skillWith5 = tableData.getIntField(10, int{});
		entry.castType5 = tableData.getIntField(11, int{});
		entry.skillSetWith2 = tableData.getIntField(12, int{});
		entry.skillSetWith3 = tableData.getIntField(13, int{});
		entry.skillSetWith4 = tableData.getIntField(14, int{});
		entry.skillSetWith5 = tableData.getIntField(15, int{});
		entry.skillSetWith6 = tableData.getIntField(16, int{});
		this->m_entries.push_back(entry);
		tableData.nextRow();
	}

	tableData.finalize();
}

CDItemSetsTable::~CDItemSetsTable() {
}

std::string CDItemSetsTable::GetName(void) const {
	return "ItemSets";
}

std::vector<CDItemSets> CDItemSetsTable::Query(std::function<bool(CDItemSets)> predicate) {
	std::vector<CDItemSets> data = cpplinq::from(this->m_entries)
		>> cpplinq::where(predicate)
		>> cpplinq::to_vector();

	return data;
}

std::vector<CDItemSets> CDItemSetsTable::GetEntries(void) const {
	return this->m_entries;
}
