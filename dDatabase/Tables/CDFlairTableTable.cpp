#include "CDFlairTableTable.h"
//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:32.985865
//DO NOT EDIT THIS FILE MANUALLY!

CDFlairTableTable::CDFlairTableTable() {
	unsigned int size = 0;
	auto tableSize = CDClientDatabase::ExecuteQuery("SELECT COUNT(*) FROM FlairTable");
		while (!tableSize.eof()) {
		size = tableSize.getIntField(0, 0);
		tableSize.nextRow();
	}

	tableSize.finalize();
	this->m_entries.reserve(size);

	auto tableData = CDClientDatabase::ExecuteQuery("SELECT * FROM FlairTable");
	while (!tableData.eof()) {
		CDFlairTable entry;
		entry.id = tableData.getIntField(0, int{});
		entry.asset = tableData.getStringField(1, std::string{}.c_str());
		this->m_entries.push_back(entry);
		tableData.nextRow();
	}

	tableData.finalize();
}

CDFlairTableTable::~CDFlairTableTable() {
}

std::string CDFlairTableTable::GetName(void) const {
	return "FlairTable";
}

std::vector<CDFlairTable> CDFlairTableTable::Query(std::function<bool(CDFlairTable)> predicate) {
	std::vector<CDFlairTable> data = cpplinq::from(this->m_entries)
		>> cpplinq::where(predicate)
		>> cpplinq::to_vector();

	return data;
}

std::vector<CDFlairTable> CDFlairTableTable::GetEntries(void) const {
	return this->m_entries;
}
