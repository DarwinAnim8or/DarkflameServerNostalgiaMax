#include "CDNpcIconsTable.h"
//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:33.243177
//DO NOT EDIT THIS FILE MANUALLY!

CDNpcIconsTable::CDNpcIconsTable() {
	unsigned int size = 0;
	auto tableSize = CDClientDatabase::ExecuteQuery("SELECT COUNT(*) FROM NpcIcons");
		while (!tableSize.eof()) {
		size = tableSize.getIntField(0, 0);
		tableSize.nextRow();
	}

	tableSize.finalize();
	this->m_entries.reserve(size);

	auto tableData = CDClientDatabase::ExecuteQuery("SELECT * FROM NpcIcons");
	while (!tableData.eof()) {
		CDNpcIcons entry;
		entry.id = tableData.getIntField(0, int{});
		entry.color = tableData.getIntField(1, int{});
		entry.offset = tableData.getFloatField(2, float{});
		entry.LOT = tableData.getIntField(3, int{});
		entry.isClickable = tableData.getIntField(4, bool{});
		entry.scale = tableData.getFloatField(5, float{});
		entry.rotateToFace = tableData.getIntField(6, bool{});
		entry.description = tableData.getStringField(7, std::string{}.c_str());
		this->m_entries.push_back(entry);
		tableData.nextRow();
	}

	tableData.finalize();
}

CDNpcIconsTable::~CDNpcIconsTable() {
}

std::string CDNpcIconsTable::GetName(void) const {
	return "NpcIcons";
}

std::vector<CDNpcIcons> CDNpcIconsTable::Query(std::function<bool(CDNpcIcons)> predicate) {
	std::vector<CDNpcIcons> data = cpplinq::from(this->m_entries)
		>> cpplinq::where(predicate)
		>> cpplinq::to_vector();

	return data;
}

std::vector<CDNpcIcons> CDNpcIconsTable::GetEntries(void) const {
	return this->m_entries;
}
