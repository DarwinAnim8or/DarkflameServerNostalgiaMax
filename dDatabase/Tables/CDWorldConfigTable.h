#pragma once
#include "CDTable.h"

//Generated by xmlDb2dDatabaseGenerator on 2022-03-04 00:23:33.495647
//DO NOT EDIT THIS FILE MANUALLY!

struct CDWorldConfig {
	float pegravityvalue;
	float pebroadphaseworldsize;
	float pegameobjscalefactor;
	float character_rotation_speed;
	float character_walk_forward_speed;
	float character_walk_backward_speed;
	float character_walk_strafe_speed;
	float character_walk_strafe_forward_speed;
	float character_walk_strafe_backward_speed;
	float character_run_backward_speed;
	float character_run_strafe_speed;
	float character_run_strafe_forward_speed;
	float character_run_strafe_backward_speed;
	float global_cooldown;
	float characterGroundedTime;
	float characterGroundedSpeed;
	float globalImmunityTime;
	float character_max_slope;
	float defaultrespawntime;
	float mission_tooltip_timeout;
	float vendor_buy_multiplier;
	float pet_follow_radius;
	float character_eye_height;
	float flight_vertical_velocity;
	float flight_airspeed;
	float flight_fuel_ratio;
	float flight_max_airspeed;
	float fReputationPerVote;
	int nPropertyCloneLimit;
	int defaultHomespaceTemplate;
	float coins_lost_on_death_percent;
	int coins_lost_on_death_min;
	int coins_lost_on_death_max;
	int character_votes_per_day;
	int property_moderation_request_approval_cost;
	int property_moderation_request_review_cost;
	int propertyModRequestsAllowedSpike;
	int propertyModRequestsAllowedInterval;
	int propertyModRequestsAllowedTotal;
	int propertyModRequestsSpikeDuration;
	int propertyModRequestsIntervalDuration;
	bool modelModerateOnCreate;
	float defaultPropertyMaxHeight;
	float reputationPerVoteCast;
	float reputationPerVoteReceived;
	int showcaseTopModelConsiderationBattles;
	float reputationPerBattlePromotion;
	float coins_lost_on_death_min_timeout;
	float coins_lost_on_death_max_timeout;
};

class CDWorldConfigTable : public CDTable {
private:
	std::vector<CDWorldConfig> m_entries;
public:
	CDWorldConfigTable();
	~CDWorldConfigTable();
	std::string GetName(void) const override;

std::vector<CDWorldConfig> Query(std::function<bool(CDWorldConfig)> predicate);
	std::vector<CDWorldConfig> GetEntries(void) const;
};
